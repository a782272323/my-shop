<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="learn.lhb.my.shop.web.admin.dao.TbUserDao">
    <!-- TODO 把mybatis的配置那些还有语法 做个笔记 -->

    <!-- 可重复引用 -->
    <sql id="tbUserColumns">
        a.id,
        a.username,
        a.password,
        a.phone,
        a.email,
        a.created,
        a.updated
    </sql>

    <!-- 要是List<>排序不了的话，再换成List<Map<>> -->
    <!-- 查询全部信息 -->
    <select id="selectAll" resultType="TbUserDomain">
        SELECT
            <include refid="tbUserColumns"/><!-- 引用<sql> -->
        FROM
            tb_user AS a
    </select>

    <!-- 添加 -->
    <insert id="insert">
        INSERT INTO tb_user (
            username,
            password,
            phone,
            email,
            created,
            updated
        )
        VALUES
            (
                #{username},
                #{password},
                #{phone},
                #{email},
                #{created},
                #{updated}
            )
    </insert>

    <!-- TODO 需不需要物理删除到时再看看 -->
    <!-- 删除 -->
    <delete id="delete">
        DELETE FROM tb_user WHERE id = #{id}
    </delete>

    <!-- 修改 -->
    <update id="update">
        UPDATE
            tb_user
        SET
            username = #{username},
            password = #{password},
            phone = #{phone},
            email = #{email},
            updated = #{updated},
        WHERE
            id = #{id}

    </update>

    <select id="getById" resultType="TbUserDomain">
        SELECT
            <include refid="tbUserColumns"></include>
        FROM
            tb_user AS a
        WHERE
            a.id = #{id}
    </select>

    <select id="selectByUsername" resultType="TbUserDomain">
        SELECT
            <include refid="tbUserColumns"/>
        FROM
            tb_user AS a
        WHERE
            a.username LIKE CONCAT('%',#{username},'%')
    </select>

    <select id="getByEmail" resultType="TbUserDomain" parameterType="String">
        SELECT
            <include refid="tbUserColumns"/>
        FROM
            tb_user AS a
        WHERE
            a.email = #{email}
    </select>

    <!-- 精确搜索 -->
    <select id="search" resultType="TbUserDomain">
        SELECT
            <include refid="tbUserColumns"></include>
        FROM
            tb_user AS a
        <where>
            <if test="username != null and username != ''">
                AND a.username LIKE CONCAT ('%',#{username},'%')
            </if>
            <if test="phone != null and phone != ''">
                AND a.phone LIKE CONCAT ('%',#{phone},'%')
            </if>
            <if test="email != null and email != ''">
                AND a.email LIKE CONCAT ('%',#{email},'%')
            </if>
        </where>
    </select>

    <!-- 批量删除 -->
    <delete id="deleteMulti">
        DELETE FROM tb_user
        WHERE id IN
        <foreach collection="array" open="(" close=")" separator="," item="id">
            <!-- array数组类型，open是左括号，close是右括号，separator是定义分割符号 TODO 这个笔记补充到mybatis里面去 -->
            #{id}
        </foreach>
    </delete>

    <!-- 校验邮箱是否重复 -->
    <select id="findEmail" resultType="TbUserDomain" parameterType="String">
        SELECT email FROM tb_user WHERE email = #{email}
    </select>

    <!-- 校验手机号码是否重复 -->
    <select id="findPhone" resultType="TbUserDomain" parameterType="String">
        SELECT phone FROM tb_user WHERE phone = #{phone}
    </select>

    <!-- 校验用户名是否重复 -->
    <select id="findUsername" resultType="TbUserDomain" parameterType="String">
        SELECT username FROM tb_user WHERE username = #{phone}
    </select>

    <!-- 分页查询 -->
    <select id="page" resultType="TbUserDomain" parameterType="java.util.Map">
        <!-- 这里实体类的属性没有start和length，就使用Map的键值，比如键是start，那值就是length -->
        SELECT 
        <include refid="tbUserColumns"/>
        FROM
        tb_user AS a LIMIT ${start},${length}
    </select>

    <!-- 分页查询返回的总条数 -->
    <select id="count" resultType="java.lang.Integer">
        SELECT count(*) FROM tb_user
    </select>

</mapper>
